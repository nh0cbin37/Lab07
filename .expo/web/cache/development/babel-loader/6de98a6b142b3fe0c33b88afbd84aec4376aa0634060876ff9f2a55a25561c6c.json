{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\nvar _helpers = require(\"../helpers\");\nvar InputLabel = function InputLabel(props) {\n  var labeled = props.labeled,\n    wiggle = props.wiggle,\n    error = props.error,\n    focused = props.focused,\n    opacity = props.opacity,\n    labelLayoutWidth = props.labelLayoutWidth,\n    labelBackground = props.labelBackground,\n    label = props.label,\n    labelError = props.labelError,\n    onLayoutAnimatedText = props.onLayoutAnimatedText,\n    onLabelTextLayout = props.onLabelTextLayout,\n    hasActiveOutline = props.hasActiveOutline,\n    activeColor = props.activeColor,\n    placeholderStyle = props.placeholderStyle,\n    baseLabelTranslateX = props.baseLabelTranslateX,\n    baseLabelTranslateY = props.baseLabelTranslateY,\n    font = props.font,\n    fontSize = props.fontSize,\n    lineHeight = props.lineHeight,\n    fontWeight = props.fontWeight,\n    placeholderOpacity = props.placeholderOpacity,\n    wiggleOffsetX = props.wiggleOffsetX,\n    labelScale = props.labelScale,\n    topPosition = props.topPosition,\n    paddingLeft = props.paddingLeft,\n    paddingRight = props.paddingRight,\n    backgroundColor = props.backgroundColor,\n    roundness = props.roundness,\n    placeholderColor = props.placeholderColor,\n    errorColor = props.errorColor,\n    labelTranslationXOffset = props.labelTranslationXOffset,\n    maxFontSizeMultiplier = props.maxFontSizeMultiplier,\n    testID = props.testID,\n    isV3 = props.isV3;\n  var _getConstants = (0, _helpers.getConstants)(isV3),\n    INPUT_PADDING_HORIZONTAL = _getConstants.INPUT_PADDING_HORIZONTAL;\n  var _useWindowDimensions = (0, _reactNative.useWindowDimensions)(),\n    width = _useWindowDimensions.width;\n  var paddingOffset = paddingLeft && paddingRight ? {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  } : {};\n  var labelTranslationX = {\n    transform: [{\n      translateX: labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0]\n      })\n    }]\n  };\n  var labelStyle = Object.assign({}, font, {\n    fontSize: fontSize,\n    lineHeight: lineHeight,\n    fontWeight: fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0]\n    }),\n    transform: [{\n      translateX: wiggle ? error.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, wiggleOffsetX, 0]\n      }) : 0\n    }, {\n      translateY: baseLabelTranslateY !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [baseLabelTranslateY, 0]\n      }) : 0\n    }, {\n      scale: labelScale !== 0 ? labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [labelScale, 1]\n      }) : labeled\n    }]\n  });\n  var commonStyles = [placeholderStyle, {\n    top: topPosition\n  }, labelStyle, paddingOffset || {}];\n  var textColor = labelError && errorColor ? errorColor : placeholderColor;\n  var maxWidth = width - INPUT_PADDING_HORIZONTAL;\n  return _react.default.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.labelContainer, _reactNative.Platform.OS !== 'web' && {\n      width: width\n    }, {\n      opacity: opacity\n    }, labelTranslationX]\n  }, labelBackground === null || labelBackground === void 0 ? void 0 : labelBackground({\n    labeled: labeled,\n    labelLayoutWidth: labelLayoutWidth,\n    labelStyle: labelStyle,\n    placeholderStyle: placeholderStyle,\n    baseLabelTranslateX: baseLabelTranslateX,\n    topPosition: topPosition,\n    label: label,\n    backgroundColor: backgroundColor,\n    roundness: roundness,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: testID\n  }), _react.default.createElement(_AnimatedText.default, {\n    variant: \"bodySmall\",\n    onLayout: onLayoutAnimatedText,\n    onTextLayout: onLabelTextLayout,\n    style: [commonStyles, {\n      color: activeColor\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: `${testID}-label-active`\n  }, label), _react.default.createElement(_AnimatedText.default, {\n    variant: focused ? 'bodyLarge' : 'bodySmall',\n    style: [commonStyles, {\n      color: textColor,\n      opacity: placeholderOpacity,\n      maxWidth: maxWidth\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    testID: `${testID}-label-inactive`\n  }, label));\n};\nvar styles = _reactNative.StyleSheet.create({\n  labelContainer: {\n    zIndex: 3\n  }\n});\nvar _default = exports.default = _react.default.memo(InputLabel);","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_AnimatedText","_helpers","InputLabel","props","labeled","wiggle","error","focused","opacity","labelLayoutWidth","labelBackground","label","labelError","onLayoutAnimatedText","onLabelTextLayout","hasActiveOutline","activeColor","placeholderStyle","baseLabelTranslateX","baseLabelTranslateY","font","fontSize","lineHeight","fontWeight","placeholderOpacity","wiggleOffsetX","labelScale","topPosition","paddingLeft","paddingRight","backgroundColor","roundness","placeholderColor","errorColor","labelTranslationXOffset","maxFontSizeMultiplier","testID","isV3","_getConstants","getConstants","INPUT_PADDING_HORIZONTAL","_useWindowDimensions","useWindowDimensions","width","paddingOffset","labelTranslationX","transform","translateX","interpolate","inputRange","outputRange","labelStyle","Object","assign","translateY","scale","commonStyles","top","textColor","maxWidth","React","createElement","Animated","View","pointerEvents","style","StyleSheet","absoluteFill","styles","labelContainer","Platform","OS","AnimatedText","variant","onLayout","onTextLayout","color","numberOfLines","create","zIndex","_default","exports","default","memo"],"sources":["C:\\ReactNative\\DemoFireBase\\node_modules\\react-native-paper\\src\\components\\TextInput\\Label\\InputLabel.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getConstants } from '../helpers';\nimport type { InputLabelProps } from '../types';\n\nconst InputLabel = (props: InputLabelProps) => {\n  const {\n    labeled,\n    wiggle,\n    error,\n    focused,\n    opacity,\n    labelLayoutWidth,\n    labelBackground,\n    label,\n    labelError,\n    onLayoutAnimatedText,\n    onLabelTextLayout,\n    hasActiveOutline,\n    activeColor,\n    placeholderStyle,\n    baseLabelTranslateX,\n    baseLabelTranslateY,\n    font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    placeholderOpacity,\n    wiggleOffsetX,\n    labelScale,\n    topPosition,\n    paddingLeft,\n    paddingRight,\n    backgroundColor,\n    roundness,\n    placeholderColor,\n    errorColor,\n    labelTranslationXOffset,\n    maxFontSizeMultiplier,\n    testID,\n    isV3,\n  } = props;\n\n  const { INPUT_PADDING_HORIZONTAL } = getConstants(isV3);\n  const { width } = useWindowDimensions();\n\n  const paddingOffset =\n    paddingLeft && paddingRight ? { paddingLeft, paddingRight } : {};\n\n  const labelTranslationX = {\n    transform: [\n      {\n        // Offset label scale since RN doesn't support transform origin\n        translateX: labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [baseLabelTranslateX, labelTranslationXOffset || 0],\n        }),\n      },\n    ],\n  };\n\n  const labelStyle = {\n    ...font,\n    fontSize,\n    lineHeight,\n    fontWeight,\n    opacity: labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [hasActiveOutline ? 1 : 0, 0],\n    }),\n    transform: [\n      {\n        // Wiggle the label when there's an error\n        translateX: wiggle\n          ? error.interpolate({\n              inputRange: [0, 0.5, 1],\n              outputRange: [0, wiggleOffsetX, 0],\n            })\n          : 0,\n      },\n      {\n        // Move label to top\n        translateY:\n          baseLabelTranslateY !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [baseLabelTranslateY, 0],\n              })\n            : 0,\n      },\n      {\n        // Make label smaller\n        scale:\n          labelScale !== 0\n            ? labeled.interpolate({\n                inputRange: [0, 1],\n                outputRange: [labelScale, 1],\n              })\n            : labeled,\n      },\n    ],\n  };\n\n  const commonStyles = [\n    placeholderStyle,\n    {\n      top: topPosition,\n    },\n    labelStyle,\n    paddingOffset || {},\n  ];\n\n  const textColor = (\n    labelError && errorColor ? errorColor : placeholderColor\n  ) as ColorValue;\n\n  const maxWidth = width - INPUT_PADDING_HORIZONTAL;\n\n  return (\n    // Position colored placeholder and gray placeholder on top of each other and crossfade them\n    // This gives the effect of animating the color, but allows us to use native driver\n    <Animated.View\n      pointerEvents=\"none\"\n      style={[\n        StyleSheet.absoluteFill,\n        styles.labelContainer,\n        Platform.OS !== 'web' && { width },\n        { opacity },\n        labelTranslationX,\n      ]}\n    >\n      {labelBackground?.({\n        labeled,\n        labelLayoutWidth,\n        labelStyle,\n        placeholderStyle,\n        baseLabelTranslateX,\n        topPosition,\n        label,\n        backgroundColor,\n        roundness,\n        maxFontSizeMultiplier: maxFontSizeMultiplier,\n        testID,\n      })}\n      <AnimatedText\n        variant=\"bodySmall\"\n        onLayout={onLayoutAnimatedText}\n        onTextLayout={onLabelTextLayout}\n        style={[\n          commonStyles,\n          {\n            color: activeColor,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-active`}\n      >\n        {label}\n      </AnimatedText>\n      <AnimatedText\n        variant={focused ? 'bodyLarge' : 'bodySmall'}\n        style={[\n          commonStyles,\n          {\n            color: textColor,\n            opacity: placeholderOpacity,\n            maxWidth,\n          },\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n        testID={`${testID}-label-inactive`}\n      >\n        {label}\n      </AnimatedText>\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  labelContainer: {\n    zIndex: 3,\n  },\n});\n\nexport default React.memo(InputLabel);\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAQA,IAAAE,aAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AAGA,IAAMI,UAAU,GAAI,SAAdA,UAAUA,CAAIC,KAAsB,EAAK;EAC7C,IACEC,OAAO,GAkCLD,KAAK,CAlCPC,OAAO;IACPC,MAAM,GAiCJF,KAAK,CAjCPE,MAAM;IACNC,KAAK,GAgCHH,KAAK,CAhCPG,KAAK;IACLC,OAAO,GA+BLJ,KAAK,CA/BPI,OAAO;IACPC,OAAO,GA8BLL,KAAK,CA9BPK,OAAO;IACPC,gBAAgB,GA6BdN,KAAK,CA7BPM,gBAAgB;IAChBC,eAAe,GA4BbP,KAAK,CA5BPO,eAAe;IACfC,KAAK,GA2BHR,KAAK,CA3BPQ,KAAK;IACLC,UAAU,GA0BRT,KAAK,CA1BPS,UAAU;IACVC,oBAAoB,GAyBlBV,KAAK,CAzBPU,oBAAoB;IACpBC,iBAAiB,GAwBfX,KAAK,CAxBPW,iBAAiB;IACjBC,gBAAgB,GAuBdZ,KAAK,CAvBPY,gBAAgB;IAChBC,WAAW,GAsBTb,KAAK,CAtBPa,WAAW;IACXC,gBAAgB,GAqBdd,KAAK,CArBPc,gBAAgB;IAChBC,mBAAmB,GAoBjBf,KAAK,CApBPe,mBAAmB;IACnBC,mBAAmB,GAmBjBhB,KAAK,CAnBPgB,mBAAmB;IACnBC,IAAI,GAkBFjB,KAAK,CAlBPiB,IAAI;IACJC,QAAQ,GAiBNlB,KAAK,CAjBPkB,QAAQ;IACRC,UAAU,GAgBRnB,KAAK,CAhBPmB,UAAU;IACVC,UAAU,GAeRpB,KAAK,CAfPoB,UAAU;IACVC,kBAAkB,GAchBrB,KAAK,CAdPqB,kBAAkB;IAClBC,aAAa,GAaXtB,KAAK,CAbPsB,aAAa;IACbC,UAAU,GAYRvB,KAAK,CAZPuB,UAAU;IACVC,WAAW,GAWTxB,KAAK,CAXPwB,WAAW;IACXC,WAAW,GAUTzB,KAAK,CAVPyB,WAAW;IACXC,YAAY,GASV1B,KAAK,CATP0B,YAAY;IACZC,eAAe,GAQb3B,KAAK,CARP2B,eAAe;IACfC,SAAS,GAOP5B,KAAK,CAPP4B,SAAS;IACTC,gBAAgB,GAMd7B,KAAK,CANP6B,gBAAgB;IAChBC,UAAU,GAKR9B,KAAK,CALP8B,UAAU;IACVC,uBAAuB,GAIrB/B,KAAK,CAJP+B,uBAAuB;IACvBC,qBAAqB,GAGnBhC,KAAK,CAHPgC,qBAAqB;IACrBC,MAAM,GAEJjC,KAAK,CAFPiC,MAAM;IACNC,IAAA,GACElC,KAAK,CADPkC,IAAA;EAGF,IAAAC,aAAA,GAAqC,IAAAC,qBAAY,EAACF,IAAI,CAAC;IAA/CG,wBAAA,GAAAF,aAAA,CAAAE,wBAAA;EACR,IAAAC,oBAAA,GAAkB,IAAAC,gCAAmB,EAAC,CAAC;IAA/BC,KAAA,GAAAF,oBAAA,CAAAE,KAAA;EAER,IAAMC,aAAa,GACjBhB,WAAW,IAAIC,YAAY,GAAG;IAAED,WAAW,EAAXA,WAAW;IAAEC,YAAA,EAAAA;EAAa,CAAC,GAAG,CAAC,CAAC;EAElE,IAAMgB,iBAAiB,GAAG;IACxBC,SAAS,EAAE,CACT;MAEEC,UAAU,EAAE3C,OAAO,CAAC4C,WAAW,CAAC;QAC9BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAAChC,mBAAmB,EAAEgB,uBAAuB,IAAI,CAAC;MACjE,CAAC;IACH,CAAC;EAEL,CAAC;EAED,IAAMiB,UAAU,GAAAC,MAAA,CAAAC,MAAA,KACXjC,IAAI;IACPC,QAAQ,EAARA,QAAQ;IACRC,UAAU,EAAVA,UAAU;IACVC,UAAU,EAAVA,UAAU;IACVf,OAAO,EAAEJ,OAAO,CAAC4C,WAAW,CAAC;MAC3BC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAACnC,gBAAgB,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;IAC3C,CAAC,CAAC;IACF+B,SAAS,EAAE,CACT;MAEEC,UAAU,EAAE1C,MAAM,GACdC,KAAK,CAAC0C,WAAW,CAAC;QAChBC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;QACvBC,WAAW,EAAE,CAAC,CAAC,EAAEzB,aAAa,EAAE,CAAC;MACnC,CAAC,CAAC,GACF;IACN,CAAC,EACD;MAEE6B,UAAU,EACRnC,mBAAmB,KAAK,CAAC,GACrBf,OAAO,CAAC4C,WAAW,CAAC;QAClBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAAC/B,mBAAmB,EAAE,CAAC;MACtC,CAAC,CAAC,GACF;IACR,CAAC,EACD;MAEEoC,KAAK,EACH7B,UAAU,KAAK,CAAC,GACZtB,OAAO,CAAC4C,WAAW,CAAC;QAClBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QAClBC,WAAW,EAAE,CAACxB,UAAU,EAAE,CAAC;MAC7B,CAAC,CAAC,GACFtB;IACR,CAAC;EAAA,EAEJ;EAED,IAAMoD,YAAY,GAAG,CACnBvC,gBAAgB,EAChB;IACEwC,GAAG,EAAE9B;EACP,CAAC,EACDwB,UAAU,EACVP,aAAa,IAAI,CAAC,CAAC,CACpB;EAED,IAAMc,SAAS,GACb9C,UAAU,IAAIqB,UAAU,GAAGA,UAAU,GAAGD,gBAC3B;EAEf,IAAM2B,QAAQ,GAAGhB,KAAK,GAAGH,wBAAwB;EAEjD,OAGEoB,cAAA,CAAAC,aAAA,CAACC,qBAAQ,CAACC,IAAI;IACZC,aAAa,EAAC,MAAM;IACpBC,KAAK,EAAE,CACLC,uBAAU,CAACC,YAAY,EACvBC,MAAM,CAACC,cAAc,EACrBC,qBAAQ,CAACC,EAAE,KAAK,KAAK,IAAI;MAAE5B,KAAA,EAAAA;IAAM,CAAC,EAClC;MAAEnC,OAAA,EAAAA;IAAQ,CAAC,EACXqC,iBAAiB;EACjB,GAEDnC,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAG;IACjBN,OAAO,EAAPA,OAAO;IACPK,gBAAgB,EAAhBA,gBAAgB;IAChB0C,UAAU,EAAVA,UAAU;IACVlC,gBAAgB,EAAhBA,gBAAgB;IAChBC,mBAAmB,EAAnBA,mBAAmB;IACnBS,WAAW,EAAXA,WAAW;IACXhB,KAAK,EAALA,KAAK;IACLmB,eAAe,EAAfA,eAAe;IACfC,SAAS,EAATA,SAAS;IACTI,qBAAqB,EAAEA,qBAAqB;IAC5CC,MAAA,EAAAA;EACF,CAAC,CAAC,EACFwB,cAAA,CAAAC,aAAA,CAACW,qBAAY;IACXC,OAAO,EAAC,WAAW;IACnBC,QAAQ,EAAE7D,oBAAqB;IAC/B8D,YAAY,EAAE7D,iBAAkB;IAChCmD,KAAK,EAAE,CACLT,YAAY,EACZ;MACEoB,KAAK,EAAE5D;IACT,CAAC,CACD;IACF6D,aAAa,EAAE,CAAE;IACjB1C,qBAAqB,EAAEA,qBAAsB;IAC7CC,MAAM,EAAG,GAAEA,MAAO;EAAe,GAEhCzB,KACW,CAAC,EACfiD,cAAA,CAAAC,aAAA,CAACW,qBAAY;IACXC,OAAO,EAAElE,OAAO,GAAG,WAAW,GAAG,WAAY;IAC7C0D,KAAK,EAAE,CACLT,YAAY,EACZ;MACEoB,KAAK,EAAElB,SAAS;MAChBlD,OAAO,EAAEgB,kBAAkB;MAC3BmC,QAAA,EAAAA;IACF,CAAC,CACD;IACFkB,aAAa,EAAE,CAAE;IACjB1C,qBAAqB,EAAEA,qBAAsB;IAC7CC,MAAM,EAAG,GAAEA,MAAO;EAAiB,GAElCzB,KACW,CACD;AAEnB,CAAC;AAED,IAAMyD,MAAM,GAAGF,uBAAU,CAACY,MAAM,CAAC;EAC/BT,cAAc,EAAE;IACdU,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAAA,IAAAC,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEatB,cAAK,CAACuB,IAAI,CAACjF,UAAU,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}