{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAppModule = getAppModule;\nexports.getNativeModule = getNativeModule;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _reactNative = require(\"react-native\");\nvar _constants = require(\"../constants\");\nvar _NativeFirebaseError = _interopRequireDefault(require(\"../NativeFirebaseError\"));\nvar _RNFBNativeEventEmitter = _interopRequireDefault(require(\"../RNFBNativeEventEmitter\"));\nvar _SharedEventEmitter = _interopRequireDefault(require(\"../SharedEventEmitter\"));\nvar NATIVE_MODULE_REGISTRY = {};\nvar NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\nfunction nativeModuleKey(module) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var possiblePromise = method.apply(void 0, [].concat((0, _toConsumableArray2.default)(argToPrepend), args));\n    if (possiblePromise && possiblePromise.then) {\n      var jsStack = new Error().stack;\n      return possiblePromise.catch(function (nativeError) {\n        return Promise.reject(new _NativeFirebaseError.default(nativeError, jsStack, namespace));\n      });\n    }\n    return possiblePromise;\n  };\n}\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  var native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n  var properties = Object.keys(NativeModule);\n  for (var i = 0, len = properties.length; i < len; i++) {\n    var property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n  return native;\n}\nfunction initialiseNativeModule(module) {\n  var config = module._config;\n  var key = nativeModuleKey(module);\n  var namespace = config.namespace,\n    nativeEvents = config.nativeEvents,\n    nativeModuleName = config.nativeModuleName,\n    hasMultiAppSupport = config.hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport = config.hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion = config.disablePrependCustomUrlOrRegion;\n  var multiModuleRoot = {};\n  var multiModule = Array.isArray(nativeModuleName);\n  var nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n  for (var i = 0; i < nativeModuleNames.length; i++) {\n    var nativeModule = _reactNative.NativeModules[nativeModuleNames[i]];\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n    var argToPrepend = [];\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n  if (nativeEvents && nativeEvents.length) {\n    for (var _i = 0, len = nativeEvents.length; _i < len; _i++) {\n      subscribeToNativeModuleEvent(nativeEvents[_i]);\n    }\n  }\n  Object.freeze(multiModuleRoot);\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n  return NATIVE_MODULE_REGISTRY[key];\n}\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    _RNFBNativeEventEmitter.default.addListener(eventName, function (event) {\n      if (event.appName) {\n        _SharedEventEmitter.default.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        _SharedEventEmitter.default.emit(eventName, event);\n      }\n    });\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\nfunction getMissingModuleHelpText(namespace) {\n  var snippet = `firebase.${namespace}()`;\n  var nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n  if (_reactNative.Platform.OS === 'ios') {\n    return `You attempted to use a firebase module that's not installed natively on your iOS project by calling ${snippet}.` + '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' + '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.';\n  }\n  var rnFirebasePackage = `'io.invertase.firebase.${namespace}.ReactNativeFirebase${nativeModule}Package'`;\n  var newInstance = `'new ReactNativeFirebase${nativeModule}Package()'`;\n  return `You attempted to use a firebase module that's not installed on your Android project by calling ${snippet}.` + `\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the ${rnFirebasePackage} module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the ` + `${newInstance} line inside of the RN 'getPackages()' method list.` + '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.';\n}\nfunction getNativeModule(module) {\n  var key = nativeModuleKey(module);\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n  return initialiseNativeModule(module);\n}\nfunction getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE];\n  }\n  var namespace = 'app';\n  var nativeModule = _reactNative.NativeModules[_constants.APP_NATIVE_MODULE];\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n  NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n  return NATIVE_MODULE_REGISTRY[_constants.APP_NATIVE_MODULE];\n}","map":{"version":3,"names":["_reactNative","require","_constants","_NativeFirebaseError","_interopRequireDefault","_RNFBNativeEventEmitter","_SharedEventEmitter","NATIVE_MODULE_REGISTRY","NATIVE_MODULE_EVENT_SUBSCRIPTIONS","nativeModuleKey","module","_customUrlOrRegion","app","name","_config","namespace","nativeModuleMethodWrapped","method","argToPrepend","_len","arguments","length","args","Array","_key","possiblePromise","apply","concat","_toConsumableArray2","default","then","jsStack","Error","stack","catch","nativeError","Promise","reject","NativeFirebaseError","nativeModuleWrapped","NativeModule","native","properties","Object","keys","i","len","property","initialiseNativeModule","config","key","nativeEvents","nativeModuleName","hasMultiAppSupport","hasCustomUrlOrRegionSupport","disablePrependCustomUrlOrRegion","multiModuleRoot","multiModule","isArray","nativeModuleNames","nativeModule","NativeModules","getMissingModuleHelpText","push","assign","subscribeToNativeModuleEvent","freeze","eventName","RNFBNativeEventEmitter","addListener","event","appName","SharedEventEmitter","emit","snippet","charAt","toUpperCase","slice","Platform","OS","rnFirebasePackage","newInstance","getNativeModule","getAppModule","APP_NATIVE_MODULE"],"sources":["C:/ReactNative/DemoFireBase/node_modules/@react-native-firebase/app/lib/internal/registry/nativeModule.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeModules, Platform } from 'react-native';\nimport { APP_NATIVE_MODULE } from '../constants';\nimport NativeFirebaseError from '../NativeFirebaseError';\nimport RNFBNativeEventEmitter from '../RNFBNativeEventEmitter';\nimport SharedEventEmitter from '../SharedEventEmitter';\n\nconst NATIVE_MODULE_REGISTRY = {};\nconst NATIVE_MODULE_EVENT_SUBSCRIPTIONS = {};\n\nfunction nativeModuleKey(module) {\n  return `${module._customUrlOrRegion || ''}:${module.app.name}:${module._config.namespace}`;\n}\n\n/**\n * Wraps a native module method to provide\n * auto prepended args and custom Error classes.\n *\n * @param namespace\n * @param method\n * @param argToPrepend\n * @returns {Function}\n */\nfunction nativeModuleMethodWrapped(namespace, method, argToPrepend) {\n  return (...args) => {\n    const possiblePromise = method(...[...argToPrepend, ...args]);\n\n    if (possiblePromise && possiblePromise.then) {\n      const jsStack = new Error().stack;\n      return possiblePromise.catch(nativeError =>\n        Promise.reject(new NativeFirebaseError(nativeError, jsStack, namespace)),\n      );\n    }\n\n    return possiblePromise;\n  };\n}\n\n/**\n * Prepends all arguments in prependArgs to all native method calls\n *\n * @param namespace\n * @param NativeModule\n * @param argToPrepend\n */\nfunction nativeModuleWrapped(namespace, NativeModule, argToPrepend) {\n  const native = {};\n  if (!NativeModule) {\n    return NativeModule;\n  }\n\n  const properties = Object.keys(NativeModule);\n\n  for (let i = 0, len = properties.length; i < len; i++) {\n    const property = properties[i];\n    if (typeof NativeModule[property] === 'function') {\n      native[property] = nativeModuleMethodWrapped(namespace, NativeModule[property], argToPrepend);\n    } else {\n      native[property] = NativeModule[property];\n    }\n  }\n\n  return native;\n}\n\n/**\n * Initialises and wraps all the native module methods.\n *\n * @param module\n * @returns {*}\n */\nfunction initialiseNativeModule(module) {\n  const config = module._config;\n  const key = nativeModuleKey(module);\n  const {\n    namespace,\n    nativeEvents,\n    nativeModuleName,\n    hasMultiAppSupport,\n    hasCustomUrlOrRegionSupport,\n    disablePrependCustomUrlOrRegion,\n  } = config;\n  const multiModuleRoot = {};\n  const multiModule = Array.isArray(nativeModuleName);\n  const nativeModuleNames = multiModule ? nativeModuleName : [nativeModuleName];\n\n  for (let i = 0; i < nativeModuleNames.length; i++) {\n    const nativeModule = NativeModules[nativeModuleNames[i]];\n\n    // only error if there's a single native module\n    // as multi modules can mean some are optional\n    if (!multiModule && !nativeModule) {\n      throw new Error(getMissingModuleHelpText(namespace));\n    }\n\n    if (multiModule) {\n      multiModuleRoot[nativeModuleNames[i]] = !!nativeModule;\n    }\n\n    const argToPrepend = [];\n\n    if (hasMultiAppSupport) {\n      argToPrepend.push(module.app.name);\n    }\n\n    if (hasCustomUrlOrRegionSupport && !disablePrependCustomUrlOrRegion) {\n      argToPrepend.push(module._customUrlOrRegion);\n    }\n\n    Object.assign(multiModuleRoot, nativeModuleWrapped(namespace, nativeModule, argToPrepend));\n  }\n\n  if (nativeEvents && nativeEvents.length) {\n    for (let i = 0, len = nativeEvents.length; i < len; i++) {\n      subscribeToNativeModuleEvent(nativeEvents[i]);\n    }\n  }\n\n  Object.freeze(multiModuleRoot);\n\n  NATIVE_MODULE_REGISTRY[key] = multiModuleRoot;\n\n  return NATIVE_MODULE_REGISTRY[key];\n}\n\n/**\n * Subscribe to a native event for js side distribution by appName\n *    React Native events are hard set at compile - cant do dynamic event names\n *    so we use a single event send it to js and js then internally can prefix it\n *    and distribute dynamically.\n *\n * @param eventName\n * @private\n */\nfunction subscribeToNativeModuleEvent(eventName) {\n  if (!NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName]) {\n    RNFBNativeEventEmitter.addListener(eventName, event => {\n      if (event.appName) {\n        // native event has an appName property - auto prefix and internally emit\n        SharedEventEmitter.emit(`${event.appName}-${eventName}`, event);\n      } else {\n        // standard event - no need to prefix\n        SharedEventEmitter.emit(eventName, event);\n      }\n    });\n\n    NATIVE_MODULE_EVENT_SUBSCRIPTIONS[eventName] = true;\n  }\n}\n\n/**\n * Help text for integrating the native counter parts for each firebase module.\n *\n * @param namespace\n * @returns {string}\n */\nfunction getMissingModuleHelpText(namespace) {\n  const snippet = `firebase.${namespace}()`;\n  const nativeModule = namespace.charAt(0).toUpperCase() + namespace.slice(1);\n\n  if (Platform.OS === 'ios') {\n    return (\n      `You attempted to use a firebase module that's not installed natively on your iOS project by calling ${snippet}.` +\n      '\\r\\n\\r\\nEnsure you have either linked the module or added it to your projects Podfile.' +\n      '\\r\\n\\r\\nSee http://invertase.link/ios for full setup instructions.'\n    );\n  }\n\n  const rnFirebasePackage = `'io.invertase.firebase.${namespace}.ReactNativeFirebase${nativeModule}Package'`;\n  const newInstance = `'new ReactNativeFirebase${nativeModule}Package()'`;\n\n  return (\n    `You attempted to use a firebase module that's not installed on your Android project by calling ${snippet}.` +\n    `\\r\\n\\r\\nEnsure you have:\\r\\n\\r\\n1) imported the ${rnFirebasePackage} module in your 'MainApplication.java' file.\\r\\n\\r\\n2) Added the ` +\n    `${newInstance} line inside of the RN 'getPackages()' method list.` +\n    '\\r\\n\\r\\nSee http://invertase.link/android for full setup instructions.'\n  );\n}\n\n/**\n * Gets a wrapped native module instance for the provided firebase module.\n * Will attempt to create a new instance if non previously created.\n *\n * @param module\n * @returns {*}\n */\nexport function getNativeModule(module) {\n  const key = nativeModuleKey(module);\n\n  if (NATIVE_MODULE_REGISTRY[key]) {\n    return NATIVE_MODULE_REGISTRY[key];\n  }\n\n  return initialiseNativeModule(module);\n}\n\n/**\n * Custom wrapped app module as it does not have it's own FirebaseModule based class.\n *\n * @returns {*}\n */\nexport function getAppModule() {\n  if (NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE]) {\n    return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n  }\n\n  const namespace = 'app';\n  const nativeModule = NativeModules[APP_NATIVE_MODULE];\n\n  if (!nativeModule) {\n    throw new Error(getMissingModuleHelpText(namespace));\n  }\n\n  NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE] = nativeModuleWrapped(namespace, nativeModule, []);\n\n  return NATIVE_MODULE_REGISTRY[APP_NATIVE_MODULE];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}