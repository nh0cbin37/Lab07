{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../../core/theming\");\nvar _colors = require(\"../../styles/themes/v2/colors\");\nvar _getContrastingColor = _interopRequireDefault(require(\"../../utils/getContrastingColor\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _excluded = [\"label\", \"size\", \"style\", \"labelStyle\", \"color\", \"theme\", \"maxFontSizeMultiplier\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar defaultSize = 64;\nvar AvatarText = function AvatarText(_ref) {\n  var _theme$colors;\n  var label = _ref.label,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    labelStyle = _ref.labelStyle,\n    customColor = _ref.color,\n    themeOverrides = _ref.theme,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var theme = (0, _theming.useInternalTheme)(themeOverrides);\n  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary : _ref2$backgroundColor,\n    restStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var textColor = customColor != null ? customColor : (0, _getContrastingColor.default)(backgroundColor, _colors.white, 'rgba(0, 0, 0, .54)');\n  var _useWindowDimensions = (0, _reactNative.useWindowDimensions)(),\n    fontScale = _useWindowDimensions.fontScale;\n  return React.createElement(_reactNative.View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(_Text.default, {\n    style: [styles.text, {\n      color: textColor,\n      fontSize: size / 2,\n      lineHeight: size / fontScale\n    }, labelStyle],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label));\n};\nAvatarText.displayName = 'Avatar.Text';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nvar _default = exports.default = AvatarText;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","_colors","_getContrastingColor","_interopRequireDefault","_Text","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","defaultSize","AvatarText","_ref","_theme$colors","label","_ref$size","size","style","labelStyle","customColor","color","themeOverrides","theme","maxFontSizeMultiplier","rest","_objectWithoutProperties2","useInternalTheme","_ref2","StyleSheet","flatten","_ref2$backgroundColor","backgroundColor","colors","primary","restStyle","textColor","getContrastingColor","white","_useWindowDimensions","useWindowDimensions","fontScale","createElement","View","_extends","width","height","borderRadius","styles","container","Text","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical","_default","exports"],"sources":["C:\\ReactNative\\DemoFireBase\\node_modules\\react-native-paper\\src\\components\\Avatar\\AvatarText.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  useWindowDimensions,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\nimport { white } from '../../styles/themes/v2/colors';\nimport type { ThemeProp } from '../../types';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport Text from '../Typography/Text';\n\nconst defaultSize = 64;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Specifies the largest possible scale a text font can reach.\n   */\n  maxFontSizeMultiplier?: number;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nconst AvatarText = ({\n  label,\n  size = defaultSize,\n  style,\n  labelStyle,\n  color: customColor,\n  theme: themeOverrides,\n  maxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const { backgroundColor = theme.colors?.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    customColor ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  const { fontScale } = useWindowDimensions();\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Text\n        style={[\n          styles.text,\n          {\n            color: textColor,\n            fontSize: size / 2,\n            lineHeight: size / fontScale,\n          },\n          labelStyle,\n        ]}\n        numberOfLines={1}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      >\n        {label}\n      </Text>\n    </View>\n  );\n};\n\nAvatarText.displayName = 'Avatar.Text';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default AvatarText;\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AASA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AAEA,IAAAI,oBAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,KAAA,GAAAD,sBAAA,CAAAL,OAAA;AAAqC,IAAAO,SAAA;EAAAC,UAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAX,wBAAAe,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;;;;;;;;;;;;;;;AAErC,IAAMW,WAAW,GAAG,EAAE;AA8CtB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAGC,IAAA,EASN;EAAA,IAAAC,aAAA;EAAA,IARXC,KAAK,GAQCF,IAAA,CARNE,KAAK;IAAAC,SAAA,GAQCH,IAAA,CAPNI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAGL,WAAW,GAAAK,SAAA;IAClBE,KAAK,GAMCL,IAAA,CANNK,KAAK;IACLC,UAAU,GAKJN,IAAA,CALNM,UAAU;IACHC,WAAW,GAIZP,IAAA,CAJNQ,KAAK;IACEC,cAAc,GAGfT,IAAA,CAHNU,KAAK;IACLC,qBAAqB,GAEfX,IAAA,CAFNW,qBAAqB;IAClBC,IAAA,OAAAC,yBAAA,CAAA9B,OAAA,EACGiB,IAAA,EAAA1B,SAAA;EACN,IAAMoC,KAAK,GAAG,IAAAI,yBAAgB,EAACL,cAAc,CAAC;EAC9C,IAAAM,KAAA,GACEC,uBAAU,CAACC,OAAO,CAACZ,KAAK,CAAC,IAAI,CAAC,CAAC;IAAAa,qBAAA,GAAAH,KAAA,CADzBI,eAAe;IAAfA,eAAe,GAAAD,qBAAA,eAAAjB,aAAA,GAAGS,KAAK,CAACU,MAAM,cAAAnB,aAAA,uBAAZA,aAAA,CAAcoB,OAAO,GAAAH,qBAAA;IAAKI,SAAA,OAAAT,yBAAA,CAAA9B,OAAA,EAAAgC,KAAA,EAAAxC,UAAA;EAEpD,IAAMgD,SAAS,GACbhB,WAAW,WAAXA,WAAW,GACX,IAAAiB,4BAAmB,EAACL,eAAe,EAAEM,aAAK,EAAE,oBAAoB,CAAC;EACnE,IAAAC,oBAAA,GAAsB,IAAAC,gCAAmB,EAAC,CAAC;IAAnCC,SAAA,GAAAF,oBAAA,CAAAE,SAAA;EAER,OACE/D,KAAA,CAAAgE,aAAA,CAACC,iBAAI,EAAAC,QAAA;IACH1B,KAAK,EAAE,CACL;MACE2B,KAAK,EAAE5B,IAAI;MACX6B,MAAM,EAAE7B,IAAI;MACZ8B,YAAY,EAAE9B,IAAI,GAAG,CAAC;MACtBe,eAAA,EAAAA;IACF,CAAC,EACDgB,MAAM,CAACC,SAAS,EAChBd,SAAS;EACT,GACEV,IAAI,GAER/C,KAAA,CAAAgE,aAAA,CAACQ,aAAI;IACHhC,KAAK,EAAE,CACL8B,MAAM,CAACG,IAAI,EACX;MACE9B,KAAK,EAAEe,SAAS;MAChBgB,QAAQ,EAAEnC,IAAI,GAAG,CAAC;MAClBoC,UAAU,EAAEpC,IAAI,GAAGwB;IACrB,CAAC,EACDtB,UAAU,CACV;IACFmC,aAAa,EAAE,CAAE;IACjB9B,qBAAqB,EAAEA;EAAsB,GAE5CT,KACG,CACF,CAAC;AAEX,CAAC;AAEDH,UAAU,CAAC2C,WAAW,GAAG,aAAa;AAEtC,IAAMP,MAAM,GAAGnB,uBAAU,CAAC2B,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,IAAI,EAAE;IACJQ,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAAA,IAAAC,QAAA,GAAAC,OAAA,CAAAlE,OAAA,GAEagB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}