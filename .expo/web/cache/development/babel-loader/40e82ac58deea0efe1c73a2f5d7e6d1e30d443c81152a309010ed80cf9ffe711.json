{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TypeFieldValueUnion = exports.TypeFieldValueTimestamp = exports.TypeFieldValueRemove = exports.TypeFieldValueIncrement = exports.TypeFieldValueDelete = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _serialize = require(\"./utils/serialize\");\nvar TypeFieldValueDelete = exports.TypeFieldValueDelete = 'delete';\nvar TypeFieldValueIncrement = exports.TypeFieldValueIncrement = 'increment';\nvar TypeFieldValueRemove = exports.TypeFieldValueRemove = 'array_remove';\nvar TypeFieldValueUnion = exports.TypeFieldValueUnion = 'array_union';\nvar TypeFieldValueTimestamp = exports.TypeFieldValueTimestamp = 'timestamp';\nfunction validateArrayElements(elements) {\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i];\n    if (element instanceof FirestoreFieldValue) {\n      throw new Error('FieldValue instance cannot be used with other FieldValue methods.');\n    }\n    if ((0, _common.isArray)(element)) {\n      throw new Error('Nested arrays are not supported');\n    }\n  }\n}\nvar FirestoreFieldValue = exports.default = function () {\n  function FirestoreFieldValue() {\n    var internal = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var type = arguments.length > 1 ? arguments[1] : undefined;\n    var elements = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2.default)(this, FirestoreFieldValue);\n    if (internal === false) {\n      throw new Error('firebase.firestore.FieldValue constructor is private, use FieldValue.<field>() instead.');\n    }\n    this._type = type;\n    this._elements = elements;\n  }\n  (0, _createClass2.default)(FirestoreFieldValue, [{\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (!(other instanceof FirestoreFieldValue)) {\n        throw new Error(\"firebase.firestore.FieldValue.isEqual(*) 'other' expected a FieldValue instance.\");\n      }\n      return this._type === other._type && JSON.stringify(this._elements) === JSON.stringify(other._elements);\n    }\n  }], [{\n    key: \"delete\",\n    value: function _delete() {\n      return new FirestoreFieldValue(true, TypeFieldValueDelete);\n    }\n  }, {\n    key: \"increment\",\n    value: function increment(n) {\n      if (!(0, _common.isNumber)(n)) {\n        throw new Error(\"firebase.firestore.FieldValue.increment(*) 'n' expected a number value.\");\n      }\n      return new FirestoreFieldValue(true, TypeFieldValueIncrement, n);\n    }\n  }, {\n    key: \"serverTimestamp\",\n    value: function serverTimestamp() {\n      return new FirestoreFieldValue(true, TypeFieldValueTimestamp);\n    }\n  }, {\n    key: \"arrayUnion\",\n    value: function arrayUnion() {\n      for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n        elements[_key] = arguments[_key];\n      }\n      try {\n        validateArrayElements(elements);\n      } catch (e) {\n        throw new Error(`firebase.firestore.FieldValue.arrayUnion(*) 'elements' called with invalid data. ${e.message}`);\n      }\n      return new FirestoreFieldValue(true, TypeFieldValueUnion, (0, _serialize.buildNativeArray)(elements));\n    }\n  }, {\n    key: \"arrayRemove\",\n    value: function arrayRemove() {\n      for (var _len2 = arguments.length, elements = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        elements[_key2] = arguments[_key2];\n      }\n      try {\n        validateArrayElements(elements);\n      } catch (e) {\n        throw new Error(`firebase.firestore.FieldValue.arrayRemove(*) 'elements' called with invalid data. ${e.message}`);\n      }\n      return new FirestoreFieldValue(true, TypeFieldValueRemove, (0, _serialize.buildNativeArray)(elements));\n    }\n  }]);\n  return FirestoreFieldValue;\n}();\n(0, _serialize.provideFieldValueClass)(FirestoreFieldValue);","map":{"version":3,"names":["_common","require","_serialize","TypeFieldValueDelete","exports","TypeFieldValueIncrement","TypeFieldValueRemove","TypeFieldValueUnion","TypeFieldValueTimestamp","validateArrayElements","elements","i","length","element","FirestoreFieldValue","Error","isArray","default","internal","arguments","undefined","type","_classCallCheck2","_type","_elements","_createClass2","key","value","isEqual","other","JSON","stringify","_delete","increment","n","isNumber","serverTimestamp","arrayUnion","_len","Array","_key","e","message","buildNativeArray","arrayRemove","_len2","_key2","provideFieldValueClass"],"sources":["C:/ReactNative/DemoFireBase/node_modules/@react-native-firebase/firestore/lib/FirestoreFieldValue.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isArray, isNumber } from '@react-native-firebase/app/lib/common';\nimport { buildNativeArray, provideFieldValueClass } from './utils/serialize';\n\nexport const TypeFieldValueDelete = 'delete';\nexport const TypeFieldValueIncrement = 'increment';\nexport const TypeFieldValueRemove = 'array_remove';\nexport const TypeFieldValueUnion = 'array_union';\nexport const TypeFieldValueTimestamp = 'timestamp';\n\nfunction validateArrayElements(elements) {\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (element instanceof FirestoreFieldValue) {\n      throw new Error('FieldValue instance cannot be used with other FieldValue methods.');\n    }\n\n    if (isArray(element)) {\n      throw new Error('Nested arrays are not supported');\n    }\n  }\n}\n\nexport default class FirestoreFieldValue {\n  constructor(internal = false, type, elements) {\n    if (internal === false) {\n      throw new Error(\n        'firebase.firestore.FieldValue constructor is private, use FieldValue.<field>() instead.',\n      );\n    }\n\n    this._type = type;\n    this._elements = elements;\n  }\n\n  static delete() {\n    return new FirestoreFieldValue(true, TypeFieldValueDelete);\n  }\n\n  static increment(n) {\n    if (!isNumber(n)) {\n      throw new Error(\"firebase.firestore.FieldValue.increment(*) 'n' expected a number value.\");\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueIncrement, n);\n  }\n\n  static serverTimestamp() {\n    return new FirestoreFieldValue(true, TypeFieldValueTimestamp);\n  }\n\n  static arrayUnion(...elements) {\n    try {\n      validateArrayElements(elements);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore.FieldValue.arrayUnion(*) 'elements' called with invalid data. ${e.message}`,\n      );\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueUnion, buildNativeArray(elements));\n  }\n\n  static arrayRemove(...elements) {\n    try {\n      validateArrayElements(elements);\n    } catch (e) {\n      throw new Error(\n        `firebase.firestore.FieldValue.arrayRemove(*) 'elements' called with invalid data. ${e.message}`,\n      );\n    }\n\n    return new FirestoreFieldValue(true, TypeFieldValueRemove, buildNativeArray(elements));\n  }\n\n  isEqual(other) {\n    if (!(other instanceof FirestoreFieldValue)) {\n      throw new Error(\n        \"firebase.firestore.FieldValue.isEqual(*) 'other' expected a FieldValue instance.\",\n      );\n    }\n\n    return (\n      this._type === other._type &&\n      JSON.stringify(this._elements) === JSON.stringify(other._elements)\n    );\n  }\n}\n\nprovideFieldValueClass(FirestoreFieldValue); // serialize\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}