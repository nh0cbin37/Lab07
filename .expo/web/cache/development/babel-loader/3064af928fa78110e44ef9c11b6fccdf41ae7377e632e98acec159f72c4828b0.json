{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  SDK_VERSION: true,\n  firebase: true\n};\nexports.firebase = exports.default = exports.SDK_VERSION = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar _internal = require(\"@react-native-firebase/app/lib/internal\");\nvar _FirestoreCollectionReference = _interopRequireDefault(require(\"./FirestoreCollectionReference\"));\nvar _FirestoreDocumentReference = _interopRequireDefault(require(\"./FirestoreDocumentReference\"));\nvar _FirestorePath = _interopRequireDefault(require(\"./FirestorePath\"));\nvar _FirestoreQuery = _interopRequireDefault(require(\"./FirestoreQuery\"));\nvar _FirestoreQueryModifiers = _interopRequireDefault(require(\"./FirestoreQueryModifiers\"));\nvar _FirestoreStatics = _interopRequireDefault(require(\"./FirestoreStatics\"));\nvar _FirestoreTransactionHandler = _interopRequireDefault(require(\"./FirestoreTransactionHandler\"));\nvar _FirestoreWriteBatch = _interopRequireDefault(require(\"./FirestoreWriteBatch\"));\nvar _version = _interopRequireDefault(require(\"./version\"));\nvar _modular = require(\"./modular\");\nObject.keys(_modular).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _modular[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _modular[key];\n    }\n  });\n});\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar namespace = 'firestore';\nvar nativeModuleName = ['RNFBFirestoreModule', 'RNFBFirestoreCollectionModule', 'RNFBFirestoreDocumentModule', 'RNFBFirestoreTransactionModule'];\nvar nativeEvents = ['firestore_collection_sync_event', 'firestore_document_sync_event', 'firestore_transaction_event'];\nvar FirebaseFirestoreModule = function (_FirebaseModule) {\n  (0, _inherits2.default)(FirebaseFirestoreModule, _FirebaseModule);\n  var _super = _createSuper(FirebaseFirestoreModule);\n  function FirebaseFirestoreModule(app, config) {\n    var _this;\n    (0, _classCallCheck2.default)(this, FirebaseFirestoreModule);\n    _this = _super.call(this, app, config);\n    _this._referencePath = new _FirestorePath.default();\n    _this._transactionHandler = new _FirestoreTransactionHandler.default((0, _assertThisInitialized2.default)(_this));\n    _this.emitter.addListener(_this.eventNameForApp('firestore_collection_sync_event'), function (event) {\n      _this.emitter.emit(_this.eventNameForApp(`firestore_collection_sync_event:${event.listenerId}`), event);\n    });\n    _this.emitter.addListener(_this.eventNameForApp('firestore_document_sync_event'), function (event) {\n      _this.emitter.emit(_this.eventNameForApp(`firestore_document_sync_event:${event.listenerId}`), event);\n    });\n    _this._settings = {\n      ignoreUndefinedProperties: false\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(FirebaseFirestoreModule, [{\n    key: \"batch\",\n    value: function batch() {\n      return new _FirestoreWriteBatch.default(this);\n    }\n  }, {\n    key: \"loadBundle\",\n    value: function loadBundle(bundle) {\n      if (!(0, _common.isString)(bundle)) {\n        throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a string value.\");\n      }\n      if (bundle === '') {\n        throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a non-empty string.\");\n      }\n      return this.native.loadBundle(bundle);\n    }\n  }, {\n    key: \"namedQuery\",\n    value: function namedQuery(queryName) {\n      if (!(0, _common.isString)(queryName)) {\n        throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a string value.\");\n      }\n      if (queryName === '') {\n        throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a non-empty string.\");\n      }\n      return new _FirestoreQuery.default(this, this._referencePath, new _FirestoreQueryModifiers.default(), queryName);\n    }\n  }, {\n    key: \"clearPersistence\",\n    value: function () {\n      var _clearPersistence = (0, _asyncToGenerator2.default)(function* () {\n        yield this.native.clearPersistence();\n      });\n      function clearPersistence() {\n        return _clearPersistence.apply(this, arguments);\n      }\n      return clearPersistence;\n    }()\n  }, {\n    key: \"waitForPendingWrites\",\n    value: function () {\n      var _waitForPendingWrites = (0, _asyncToGenerator2.default)(function* () {\n        yield this.native.waitForPendingWrites();\n      });\n      function waitForPendingWrites() {\n        return _waitForPendingWrites.apply(this, arguments);\n      }\n      return waitForPendingWrites;\n    }()\n  }, {\n    key: \"terminate\",\n    value: function () {\n      var _terminate = (0, _asyncToGenerator2.default)(function* () {\n        yield this.native.terminate();\n      });\n      function terminate() {\n        return _terminate.apply(this, arguments);\n      }\n      return terminate;\n    }()\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(host, port) {\n      if (!host || !(0, _common.isString)(host) || !port || !(0, _common.isNumber)(port)) {\n        throw new Error('firebase.firestore().useEmulator() takes a non-empty host and port');\n      }\n      var _host = host;\n      var androidBypassEmulatorUrlRemap = typeof this.firebaseJson.android_bypass_emulator_url_remap === 'boolean' && this.firebaseJson.android_bypass_emulator_url_remap;\n      if (!androidBypassEmulatorUrlRemap && _common.isAndroid && _host) {\n        if (_host === 'localhost' || _host === '127.0.0.1') {\n          _host = '10.0.2.2';\n          console.log('Mapping firestore host to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.');\n        }\n      }\n      this.native.useEmulator(_host, port);\n      return [_host, port];\n    }\n  }, {\n    key: \"collection\",\n    value: function collection(collectionPath) {\n      if (!(0, _common.isString)(collectionPath)) {\n        throw new Error(\"firebase.firestore().collection(*) 'collectionPath' must be a string value.\");\n      }\n      if (collectionPath === '') {\n        throw new Error(\"firebase.firestore().collection(*) 'collectionPath' must be a non-empty string.\");\n      }\n      var path = this._referencePath.child(collectionPath);\n      if (!path.isCollection) {\n        throw new Error(\"firebase.firestore().collection(*) 'collectionPath' must point to a collection.\");\n      }\n      return new _FirestoreCollectionReference.default(this, path);\n    }\n  }, {\n    key: \"collectionGroup\",\n    value: function collectionGroup(collectionId) {\n      if (!(0, _common.isString)(collectionId)) {\n        throw new Error(\"firebase.firestore().collectionGroup(*) 'collectionId' must be a string value.\");\n      }\n      if (collectionId === '') {\n        throw new Error(\"firebase.firestore().collectionGroup(*) 'collectionId' must be a non-empty string.\");\n      }\n      if (collectionId.indexOf('/') >= 0) {\n        throw new Error(\"firebase.firestore().collectionGroup(*) 'collectionId' must not contain '/'.\");\n      }\n      return new _FirestoreQuery.default(this, this._referencePath.child(collectionId), new _FirestoreQueryModifiers.default().asCollectionGroupQuery(), undefined);\n    }\n  }, {\n    key: \"disableNetwork\",\n    value: function () {\n      var _disableNetwork = (0, _asyncToGenerator2.default)(function* () {\n        yield this.native.disableNetwork();\n      });\n      function disableNetwork() {\n        return _disableNetwork.apply(this, arguments);\n      }\n      return disableNetwork;\n    }()\n  }, {\n    key: \"doc\",\n    value: function doc(documentPath) {\n      if (!(0, _common.isString)(documentPath)) {\n        throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a string value.\");\n      }\n      if (documentPath === '') {\n        throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a non-empty string.\");\n      }\n      var path = this._referencePath.child(documentPath);\n      if (!path.isDocument) {\n        throw new Error(\"firebase.firestore().doc(*) 'documentPath' must point to a document.\");\n      }\n      return new _FirestoreDocumentReference.default(this, path);\n    }\n  }, {\n    key: \"enableNetwork\",\n    value: function () {\n      var _enableNetwork = (0, _asyncToGenerator2.default)(function* () {\n        yield this.native.enableNetwork();\n      });\n      function enableNetwork() {\n        return _enableNetwork.apply(this, arguments);\n      }\n      return enableNetwork;\n    }()\n  }, {\n    key: \"runTransaction\",\n    value: function runTransaction(updateFunction) {\n      if (!(0, _common.isFunction)(updateFunction)) {\n        return Promise.reject(new Error(\"firebase.firestore().runTransaction(*) 'updateFunction' must be a function.\"));\n      }\n      return this._transactionHandler._add(updateFunction);\n    }\n  }, {\n    key: \"settings\",\n    value: function settings(_settings) {\n      if (!(0, _common.isObject)(_settings)) {\n        return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings' must be an object.\"));\n      }\n      var keys = Object.keys(_settings);\n      var opts = ['cacheSizeBytes', 'host', 'persistence', 'ssl', 'ignoreUndefinedProperties', 'serverTimestampBehavior'];\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (!opts.includes(key)) {\n          return Promise.reject(new Error(`firebase.firestore().settings(*) 'settings.${key}' is not a valid settings field.`));\n        }\n      }\n      if (!(0, _common.isUndefined)(_settings.cacheSizeBytes)) {\n        if (!(0, _common.isNumber)(_settings.cacheSizeBytes)) {\n          return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.cacheSizeBytes' must be a number value.\"));\n        }\n        if (_settings.cacheSizeBytes !== _FirestoreStatics.default.CACHE_SIZE_UNLIMITED && _settings.cacheSizeBytes < 1048576) {\n          return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.cacheSizeBytes' the minimum cache size is 1048576 bytes (1MB).\"));\n        }\n      }\n      if (!(0, _common.isUndefined)(_settings.host)) {\n        console.warn('host in settings to connect with firestore emulator is deprecated. Use useEmulator instead.');\n        if (!(0, _common.isString)(_settings.host)) {\n          return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.host' must be a string value.\"));\n        }\n        if (_settings.host === '') {\n          return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.host' must not be an empty string.\"));\n        }\n        if (_common.isAndroid) {\n          if (_settings.host.startsWith('localhost')) {\n            _settings.host = _settings.host.replace('localhost', '10.0.2.2');\n            console.log('Mapping firestore host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.');\n          }\n          if (_settings.host.startsWith('127.0.0.1')) {\n            _settings.host = _settings.host.replace('127.0.0.1', '10.0.2.2');\n            console.log('Mapping firestore host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.');\n          }\n        }\n      }\n      if (!(0, _common.isUndefined)(_settings.persistence) && !(0, _common.isBoolean)(_settings.persistence)) {\n        return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.persistence' must be a boolean value.\"));\n      }\n      if (!(0, _common.isUndefined)(_settings.ssl) && !(0, _common.isBoolean)(_settings.ssl)) {\n        throw new Error(\"firebase.firestore().settings(*) 'settings.ssl' must be a boolean value.\");\n      }\n      if (!(0, _common.isUndefined)(_settings.serverTimestampBehavior) && !['estimate', 'previous', 'none'].includes(_settings.serverTimestampBehavior)) {\n        return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.serverTimestampBehavior' must be one of 'estimate', 'previous', 'none'.\"));\n      }\n      if (!(0, _common.isUndefined)(_settings.ignoreUndefinedProperties)) {\n        if (!(0, _common.isBoolean)(_settings.ignoreUndefinedProperties)) {\n          return Promise.reject(new Error(\"firebase.firestore().settings(*) 'settings.ignoreUndefinedProperties' must be a boolean value.\"));\n        } else {\n          this._settings.ignoreUndefinedProperties = _settings.ignoreUndefinedProperties;\n        }\n        delete _settings.ignoreUndefinedProperties;\n      }\n      return this.native.settings(_settings);\n    }\n  }]);\n  return FirebaseFirestoreModule;\n}(_internal.FirebaseModule);\nvar SDK_VERSION = exports.SDK_VERSION = _version.default;\nvar _default = exports.default = (0, _internal.createModuleNamespace)({\n  statics: _FirestoreStatics.default,\n  version: _version.default,\n  namespace: namespace,\n  nativeModuleName: nativeModuleName,\n  nativeEvents: nativeEvents,\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseFirestoreModule\n});\nvar firebase = exports.firebase = (0, _internal.getFirebaseRoot)();","map":{"version":3,"names":["_common","require","_internal","_FirestoreCollectionReference","_interopRequireDefault","_FirestoreDocumentReference","_FirestorePath","_FirestoreQuery","_FirestoreQueryModifiers","_FirestoreStatics","_FirestoreTransactionHandler","_FirestoreWriteBatch","_version","_modular","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","namespace","nativeModuleName","nativeEvents","FirebaseFirestoreModule","_FirebaseModule","_inherits2","_super","app","config","_this","_classCallCheck2","_referencePath","FirestorePath","_transactionHandler","FirestoreTransactionHandler","_assertThisInitialized2","emitter","addListener","eventNameForApp","event","emit","listenerId","_settings","ignoreUndefinedProperties","_createClass2","value","batch","FirestoreWriteBatch","loadBundle","bundle","isString","Error","native","namedQuery","queryName","FirestoreQuery","FirestoreQueryModifiers","_clearPersistence","_asyncToGenerator2","clearPersistence","_waitForPendingWrites","waitForPendingWrites","_terminate","terminate","useEmulator","host","port","isNumber","_host","androidBypassEmulatorUrlRemap","firebaseJson","android_bypass_emulator_url_remap","isAndroid","console","log","collection","collectionPath","path","child","isCollection","FirestoreCollectionReference","collectionGroup","collectionId","indexOf","asCollectionGroupQuery","undefined","_disableNetwork","disableNetwork","doc","documentPath","isDocument","FirestoreDocumentReference","_enableNetwork","enableNetwork","runTransaction","updateFunction","isFunction","Promise","reject","_add","settings","isObject","opts","i","length","includes","isUndefined","cacheSizeBytes","FirestoreStatics","CACHE_SIZE_UNLIMITED","warn","startsWith","replace","persistence","isBoolean","ssl","serverTimestampBehavior","FirebaseModule","SDK_VERSION","version","_default","createModuleNamespace","statics","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","firebase","getFirebaseRoot"],"sources":["C:/ReactNative/DemoFireBase/node_modules/@react-native-firebase/firestore/lib/index.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  isBoolean,\n  isFunction,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  isAndroid,\n} from '@react-native-firebase/app/lib/common';\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport FirestoreCollectionReference from './FirestoreCollectionReference';\nimport FirestoreDocumentReference from './FirestoreDocumentReference';\nimport FirestorePath from './FirestorePath';\nimport FirestoreQuery from './FirestoreQuery';\nimport FirestoreQueryModifiers from './FirestoreQueryModifiers';\nimport FirestoreStatics from './FirestoreStatics';\nimport FirestoreTransactionHandler from './FirestoreTransactionHandler';\nimport FirestoreWriteBatch from './FirestoreWriteBatch';\nimport version from './version';\n\nconst namespace = 'firestore';\n\nconst nativeModuleName = [\n  'RNFBFirestoreModule',\n  'RNFBFirestoreCollectionModule',\n  'RNFBFirestoreDocumentModule',\n  'RNFBFirestoreTransactionModule',\n];\n\nconst nativeEvents = [\n  'firestore_collection_sync_event',\n  'firestore_document_sync_event',\n  'firestore_transaction_event',\n];\n\nclass FirebaseFirestoreModule extends FirebaseModule {\n  constructor(app, config) {\n    super(app, config);\n    this._referencePath = new FirestorePath();\n    this._transactionHandler = new FirestoreTransactionHandler(this);\n\n    // Fan out native events\n    this.emitter.addListener(this.eventNameForApp('firestore_collection_sync_event'), event => {\n      this.emitter.emit(\n        this.eventNameForApp(`firestore_collection_sync_event:${event.listenerId}`),\n        event,\n      );\n    });\n\n    this.emitter.addListener(this.eventNameForApp('firestore_document_sync_event'), event => {\n      this.emitter.emit(\n        this.eventNameForApp(`firestore_document_sync_event:${event.listenerId}`),\n        event,\n      );\n    });\n\n    this._settings = {\n      ignoreUndefinedProperties: false,\n    };\n  }\n\n  batch() {\n    return new FirestoreWriteBatch(this);\n  }\n\n  loadBundle(bundle) {\n    if (!isString(bundle)) {\n      throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a string value.\");\n    }\n\n    if (bundle === '') {\n      throw new Error(\"firebase.firestore().loadBundle(*) 'bundle' must be a non-empty string.\");\n    }\n\n    return this.native.loadBundle(bundle);\n  }\n\n  namedQuery(queryName) {\n    if (!isString(queryName)) {\n      throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a string value.\");\n    }\n\n    if (queryName === '') {\n      throw new Error(\"firebase.firestore().namedQuery(*) 'queryName' must be a non-empty string.\");\n    }\n\n    return new FirestoreQuery(this, this._referencePath, new FirestoreQueryModifiers(), queryName);\n  }\n\n  async clearPersistence() {\n    await this.native.clearPersistence();\n  }\n\n  async waitForPendingWrites() {\n    await this.native.waitForPendingWrites();\n  }\n\n  async terminate() {\n    await this.native.terminate();\n  }\n\n  useEmulator(host, port) {\n    if (!host || !isString(host) || !port || !isNumber(port)) {\n      throw new Error('firebase.firestore().useEmulator() takes a non-empty host and port');\n    }\n    let _host = host;\n    const androidBypassEmulatorUrlRemap =\n      typeof this.firebaseJson.android_bypass_emulator_url_remap === 'boolean' &&\n      this.firebaseJson.android_bypass_emulator_url_remap;\n    if (!androidBypassEmulatorUrlRemap && isAndroid && _host) {\n      if (_host === 'localhost' || _host === '127.0.0.1') {\n        _host = '10.0.2.2';\n        // eslint-disable-next-line no-console\n        console.log(\n          'Mapping firestore host to \"10.0.2.2\" for android emulators. Use real IP on real devices. You can bypass this behaviour with \"android_bypass_emulator_url_remap\" flag.',\n        );\n      }\n    }\n    this.native.useEmulator(_host, port);\n    return [_host, port]; // undocumented return, just used to unit test android host remapping\n  }\n\n  collection(collectionPath) {\n    if (!isString(collectionPath)) {\n      throw new Error(\n        \"firebase.firestore().collection(*) 'collectionPath' must be a string value.\",\n      );\n    }\n\n    if (collectionPath === '') {\n      throw new Error(\n        \"firebase.firestore().collection(*) 'collectionPath' must be a non-empty string.\",\n      );\n    }\n\n    const path = this._referencePath.child(collectionPath);\n\n    if (!path.isCollection) {\n      throw new Error(\n        \"firebase.firestore().collection(*) 'collectionPath' must point to a collection.\",\n      );\n    }\n\n    return new FirestoreCollectionReference(this, path);\n  }\n\n  collectionGroup(collectionId) {\n    if (!isString(collectionId)) {\n      throw new Error(\n        \"firebase.firestore().collectionGroup(*) 'collectionId' must be a string value.\",\n      );\n    }\n\n    if (collectionId === '') {\n      throw new Error(\n        \"firebase.firestore().collectionGroup(*) 'collectionId' must be a non-empty string.\",\n      );\n    }\n\n    if (collectionId.indexOf('/') >= 0) {\n      throw new Error(\n        \"firebase.firestore().collectionGroup(*) 'collectionId' must not contain '/'.\",\n      );\n    }\n\n    return new FirestoreQuery(\n      this,\n      this._referencePath.child(collectionId),\n      new FirestoreQueryModifiers().asCollectionGroupQuery(),\n      undefined,\n    );\n  }\n\n  async disableNetwork() {\n    await this.native.disableNetwork();\n  }\n\n  doc(documentPath) {\n    if (!isString(documentPath)) {\n      throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a string value.\");\n    }\n\n    if (documentPath === '') {\n      throw new Error(\"firebase.firestore().doc(*) 'documentPath' must be a non-empty string.\");\n    }\n\n    const path = this._referencePath.child(documentPath);\n\n    if (!path.isDocument) {\n      throw new Error(\"firebase.firestore().doc(*) 'documentPath' must point to a document.\");\n    }\n\n    return new FirestoreDocumentReference(this, path);\n  }\n\n  async enableNetwork() {\n    await this.native.enableNetwork();\n  }\n\n  runTransaction(updateFunction) {\n    if (!isFunction(updateFunction)) {\n      return Promise.reject(\n        new Error(\"firebase.firestore().runTransaction(*) 'updateFunction' must be a function.\"),\n      );\n    }\n\n    return this._transactionHandler._add(updateFunction);\n  }\n\n  settings(settings) {\n    if (!isObject(settings)) {\n      return Promise.reject(\n        new Error(\"firebase.firestore().settings(*) 'settings' must be an object.\"),\n      );\n    }\n\n    const keys = Object.keys(settings);\n\n    const opts = [\n      'cacheSizeBytes',\n      'host',\n      'persistence',\n      'ssl',\n      'ignoreUndefinedProperties',\n      'serverTimestampBehavior',\n    ];\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (!opts.includes(key)) {\n        return Promise.reject(\n          new Error(\n            `firebase.firestore().settings(*) 'settings.${key}' is not a valid settings field.`,\n          ),\n        );\n      }\n    }\n\n    if (!isUndefined(settings.cacheSizeBytes)) {\n      if (!isNumber(settings.cacheSizeBytes)) {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.cacheSizeBytes' must be a number value.\",\n          ),\n        );\n      }\n\n      if (\n        settings.cacheSizeBytes !== FirestoreStatics.CACHE_SIZE_UNLIMITED &&\n        settings.cacheSizeBytes < 1048576 // 1MB\n      ) {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.cacheSizeBytes' the minimum cache size is 1048576 bytes (1MB).\",\n          ),\n        );\n      }\n    }\n\n    if (!isUndefined(settings.host)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'host in settings to connect with firestore emulator is deprecated. Use useEmulator instead.',\n      );\n      if (!isString(settings.host)) {\n        return Promise.reject(\n          new Error(\"firebase.firestore().settings(*) 'settings.host' must be a string value.\"),\n        );\n      }\n\n      if (settings.host === '') {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.host' must not be an empty string.\",\n          ),\n        );\n      }\n\n      if (isAndroid) {\n        if (settings.host.startsWith('localhost')) {\n          settings.host = settings.host.replace('localhost', '10.0.2.2');\n          // eslint-disable-next-line no-console\n          console.log(\n            'Mapping firestore host \"localhost\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n          );\n        }\n        if (settings.host.startsWith('127.0.0.1')) {\n          settings.host = settings.host.replace('127.0.0.1', '10.0.2.2');\n          // eslint-disable-next-line no-console\n          console.log(\n            'Mapping firestore host \"127.0.0.1\" to \"10.0.2.2\" for android emulators. Use real IP on real devices.',\n          );\n        }\n      }\n    }\n\n    if (!isUndefined(settings.persistence) && !isBoolean(settings.persistence)) {\n      return Promise.reject(\n        new Error(\n          \"firebase.firestore().settings(*) 'settings.persistence' must be a boolean value.\",\n        ),\n      );\n    }\n\n    if (!isUndefined(settings.ssl) && !isBoolean(settings.ssl)) {\n      throw new Error(\"firebase.firestore().settings(*) 'settings.ssl' must be a boolean value.\");\n    }\n\n    if (\n      !isUndefined(settings.serverTimestampBehavior) &&\n      !['estimate', 'previous', 'none'].includes(settings.serverTimestampBehavior)\n    ) {\n      return Promise.reject(\n        new Error(\n          \"firebase.firestore().settings(*) 'settings.serverTimestampBehavior' must be one of 'estimate', 'previous', 'none'.\",\n        ),\n      );\n    }\n\n    if (!isUndefined(settings.ignoreUndefinedProperties)) {\n      if (!isBoolean(settings.ignoreUndefinedProperties)) {\n        return Promise.reject(\n          new Error(\n            \"firebase.firestore().settings(*) 'settings.ignoreUndefinedProperties' must be a boolean value.\",\n          ),\n        );\n      } else {\n        this._settings.ignoreUndefinedProperties = settings.ignoreUndefinedProperties;\n      }\n\n      delete settings.ignoreUndefinedProperties;\n    }\n\n    return this.native.settings(settings);\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/firestore';\nexport const SDK_VERSION = version;\n\nexport * from './modular';\n\n// import firestore from '@react-native-firebase/firestore';\n// firestore().X(...);\nexport default createModuleNamespace({\n  statics: FirestoreStatics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents,\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseFirestoreModule,\n});\n\n// import firestore, { firebase } from '@react-native-firebase/firestore';\n// firestore().X(...);\n// firebase.firestore().X(...);\nexport const firebase = getFirebaseRoot();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}