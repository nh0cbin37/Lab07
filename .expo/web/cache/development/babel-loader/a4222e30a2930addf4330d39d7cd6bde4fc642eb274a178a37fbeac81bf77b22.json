{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar providerId = 'oidc.';\nvar OIDCAuthProvider = exports.default = function () {\n  function OIDCAuthProvider() {\n    (0, _classCallCheck2.default)(this, OIDCAuthProvider);\n    throw new Error('`new OIDCAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n  (0, _createClass2.default)(OIDCAuthProvider, null, [{\n    key: \"PROVIDER_ID\",\n    get: function get() {\n      return providerId;\n    }\n  }, {\n    key: \"credential\",\n    value: function credential(oidcSuffix, idToken, accessToken) {\n      return {\n        token: idToken,\n        secret: accessToken,\n        providerId: providerId + oidcSuffix\n      };\n    }\n  }]);\n  return OIDCAuthProvider;\n}();","map":{"version":3,"names":["providerId","OIDCAuthProvider","exports","default","_classCallCheck2","Error","_createClass2","key","get","value","credential","oidcSuffix","idToken","accessToken","token","secret"],"sources":["C:/ReactNative/DemoFireBase/node_modules/@react-native-firebase/auth/lib/providers/OIDCAuthProvider.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst providerId = 'oidc.';\n\nexport default class OIDCAuthProvider {\n  constructor() {\n    throw new Error('`new OIDCAuthProvider()` is not supported on the native Firebase SDKs.');\n  }\n\n  static get PROVIDER_ID() {\n    return providerId;\n  }\n\n  static credential(oidcSuffix, idToken, accessToken) {\n    return {\n      token: idToken,\n      secret: accessToken,\n      providerId: providerId + oidcSuffix,\n    };\n  }\n}\n"],"mappings":";;;;;;;AAiBA,IAAMA,UAAU,GAAG,OAAO;AAAC,IAENC,gBAAgB,GAAAC,OAAA,CAAAC,OAAA;EACnC,SAAAF,iBAAA,EAAc;IAAA,IAAAG,gBAAA,CAAAD,OAAA,QAAAF,gBAAA;IACZ,MAAM,IAAII,KAAK,CAAC,wEAAwE,CAAC;EAC3F;EAAC,IAAAC,aAAA,CAAAH,OAAA,EAAAF,gBAAA;IAAAM,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAyB;MACvB,OAAOR,UAAU;IACnB;EAAC;IAAAO,GAAA;IAAAE,KAAA,EAED,SAAAC,WAAkBC,UAAU,EAAEC,OAAO,EAAEC,WAAW,EAAE;MAClD,OAAO;QACLC,KAAK,EAAEF,OAAO;QACdG,MAAM,EAAEF,WAAW;QACnBb,UAAU,EAAEA,UAAU,GAAGW;MAC3B,CAAC;IACH;EAAC;EAAA,OAAAV,gBAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}