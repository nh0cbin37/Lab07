{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _common = require(\"@react-native-firebase/app/lib/common\");\nvar FirestoreSnapshotMetadata = exports.default = function () {\n  function FirestoreSnapshotMetadata(metadata) {\n    (0, _classCallCheck2.default)(this, FirestoreSnapshotMetadata);\n    this._metadata = metadata;\n  }\n  (0, _createClass2.default)(FirestoreSnapshotMetadata, [{\n    key: \"fromCache\",\n    get: function get() {\n      return this._metadata[0];\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this._metadata[1];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if ((0, _common.isUndefined)(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n        throw new Error(\"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\");\n      }\n      return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n    }\n  }]);\n  return FirestoreSnapshotMetadata;\n}();","map":{"version":3,"names":["_common","require","FirestoreSnapshotMetadata","exports","default","metadata","_classCallCheck2","_metadata","_createClass2","key","get","value","isEqual","other","isUndefined","Error","fromCache","hasPendingWrites"],"sources":["C:/ReactNative/DemoFireBase/node_modules/@react-native-firebase/firestore/lib/FirestoreSnapshotMetadata.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreSnapshotMetadata {\n  constructor(metadata) {\n    this._metadata = metadata;\n  }\n\n  get fromCache() {\n    return this._metadata[0];\n  }\n\n  get hasPendingWrites() {\n    return this._metadata[1];\n  }\n\n  isEqual(other) {\n    if (isUndefined(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n      throw new Error(\n        \"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\",\n      );\n    }\n\n    return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n  }\n}\n"],"mappings":";;;;;;;AAiBA,IAAAA,OAAA,GAAAC,OAAA;AAAoE,IAE/CC,yBAAyB,GAAAC,OAAA,CAAAC,OAAA;EAC5C,SAAAF,0BAAYG,QAAQ,EAAE;IAAA,IAAAC,gBAAA,CAAAF,OAAA,QAAAF,yBAAA;IACpB,IAAI,CAACK,SAAS,GAAGF,QAAQ;EAC3B;EAAC,IAAAG,aAAA,CAAAJ,OAAA,EAAAF,yBAAA;IAAAO,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAgB;MACd,OAAO,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC;IAC1B;EAAC;IAAAE,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAuB;MACrB,OAAO,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC;IAC1B;EAAC;IAAAE,GAAA;IAAAE,KAAA,EAED,SAAAC,QAAQC,KAAK,EAAE;MACb,IAAI,IAAAC,mBAAW,EAACD,KAAK,CAAC,IAAI,EAAEA,KAAK,YAAYX,yBAAyB,CAAC,EAAE;QACvE,MAAM,IAAIa,KAAK,CACb,gGACF,CAAC;MACH;MAEA,OAAO,IAAI,CAACC,SAAS,KAAKH,KAAK,CAACG,SAAS,IAAI,IAAI,CAACC,gBAAgB,KAAKJ,KAAK,CAACI,gBAAgB;IAC/F;EAAC;EAAA,OAAAf,yBAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}