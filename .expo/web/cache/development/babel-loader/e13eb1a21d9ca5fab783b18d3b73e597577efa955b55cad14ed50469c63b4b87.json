{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Bytes = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _index = require(\"../index\");\nvar Bytes = exports.Bytes = function () {\n  function Bytes(blob) {\n    (0, _classCallCheck2.default)(this, Bytes);\n    this._blob = blob;\n  }\n  (0, _createClass2.default)(Bytes, [{\n    key: \"toBase64\",\n    value: function toBase64() {\n      return this._blob.toBase64();\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      return this._blob.toUint8Array();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return 'Bytes(base64: ' + this.toBase64() + ')';\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      return this._blob.isEqual(other._blob);\n    }\n  }], [{\n    key: \"fromBase64String\",\n    value: function fromBase64String(base64) {\n      return new Bytes(_index.firebase.firestore.Blob.fromBase64String(base64));\n    }\n  }, {\n    key: \"fromUint8Array\",\n    value: function fromUint8Array(array) {\n      return new Bytes(_index.firebase.firestore.Blob.fromUint8Array(array));\n    }\n  }]);\n  return Bytes;\n}();","map":{"version":3,"names":["_index","require","Bytes","exports","blob","_classCallCheck2","default","_blob","_createClass2","key","value","toBase64","toUint8Array","toString","isEqual","other","fromBase64String","base64","firebase","firestore","Blob","fromUint8Array","array"],"sources":["C:/ReactNative/DemoFireBase/node_modules/@react-native-firebase/firestore/lib/modular/Bytes.js"],"sourcesContent":["import { firebase } from '../index';\n\n/**\n * An immutable object representing an array of bytes.\n */\nexport class Bytes {\n  /**\n   * @hideconstructor\n   * @param {firebase.firestore.Blob} blob\n   */\n  constructor(blob) {\n    this._blob = blob;\n  }\n\n  /**\n   * @param {string} base64\n   * @returns {Bytes}\n   */\n  static fromBase64String(base64) {\n    return new Bytes(firebase.firestore.Blob.fromBase64String(base64));\n  }\n\n  /**\n   * @param {Uint8Array} array\n   * @returns {Bytes}\n   */\n  static fromUint8Array(array) {\n    return new Bytes(firebase.firestore.Blob.fromUint8Array(array));\n  }\n\n  /**\n   * @returns {string}\n   */\n  toBase64() {\n    return this._blob.toBase64();\n  }\n\n  /**\n   * @returns {Uint8Array}\n   */\n  toUint8Array() {\n    return this._blob.toUint8Array();\n  }\n\n  /**\n   * @returns {string}\n   */\n  toString() {\n    return 'Bytes(base64: ' + this.toBase64() + ')';\n  }\n\n  /**\n   * @param {Bytes} other\n   * @returns {boolean}\n   */\n  isEqual(other) {\n    return this._blob.isEqual(other._blob);\n  }\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAAoC,IAKvBC,KAAK,GAAAC,OAAA,CAAAD,KAAA;EAKhB,SAAAA,MAAYE,IAAI,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAJ,KAAA;IAChB,IAAI,CAACK,KAAK,GAAGH,IAAI;EACnB;EAAC,IAAAI,aAAA,CAAAF,OAAA,EAAAJ,KAAA;IAAAO,GAAA;IAAAC,KAAA,EAqBD,SAAAC,SAAA,EAAW;MACT,OAAO,IAAI,CAACJ,KAAK,CAACI,QAAQ,CAAC,CAAC;IAC9B;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAKD,SAAAE,aAAA,EAAe;MACb,OAAO,IAAI,CAACL,KAAK,CAACK,YAAY,CAAC,CAAC;IAClC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAKD,SAAAG,SAAA,EAAW;MACT,OAAO,gBAAgB,GAAG,IAAI,CAACF,QAAQ,CAAC,CAAC,GAAG,GAAG;IACjD;EAAC;IAAAF,GAAA;IAAAC,KAAA,EAMD,SAAAI,QAAQC,KAAK,EAAE;MACb,OAAO,IAAI,CAACR,KAAK,CAACO,OAAO,CAACC,KAAK,CAACR,KAAK,CAAC;IACxC;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAvCD,SAAAM,iBAAwBC,MAAM,EAAE;MAC9B,OAAO,IAAIf,KAAK,CAACgB,eAAQ,CAACC,SAAS,CAACC,IAAI,CAACJ,gBAAgB,CAACC,MAAM,CAAC,CAAC;IACpE;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAMD,SAAAW,eAAsBC,KAAK,EAAE;MAC3B,OAAO,IAAIpB,KAAK,CAACgB,eAAQ,CAACC,SAAS,CAACC,IAAI,CAACC,cAAc,CAACC,KAAK,CAAC,CAAC;IACjE;EAAC;EAAA,OAAApB,KAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}